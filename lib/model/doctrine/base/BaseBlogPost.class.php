<?php

/**
 * BaseBlogPost
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $blog_id
 * @property integer $post_id
 * @property Blog $Blog
 * @property Post $Post
 * 
 * @method integer  getId()      Returns the current record's "id" value
 * @method integer  getBlogId()  Returns the current record's "blog_id" value
 * @method integer  getPostId()  Returns the current record's "post_id" value
 * @method Blog     getBlog()    Returns the current record's "Blog" value
 * @method Post     getPost()    Returns the current record's "Post" value
 * @method BlogPost setId()      Sets the current record's "id" value
 * @method BlogPost setBlogId()  Sets the current record's "blog_id" value
 * @method BlogPost setPostId()  Sets the current record's "post_id" value
 * @method BlogPost setBlog()    Sets the current record's "Blog" value
 * @method BlogPost setPost()    Sets the current record's "Post" value
 * 
 * @package    Empaty
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBlogPost extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('blog_post');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('blog_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('post_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));


        $this->index('blog_id', array(
             'fields' => 
             array(
              0 => 'blog_id',
             ),
             'type' => NULL,
             ));
        $this->index('post_id', array(
             'fields' => 
             array(
              0 => 'post_id',
             ),
             'type' => NULL,
             ));
        $this->index('created_at', array(
             'fields' => 
             array(
              0 => 'created_at',
             ),
             'type' => NULL,
             ));
        $this->index('updated_at', array(
             'fields' => 
             array(
              0 => 'updated_at',
             ),
             'type' => NULL,
             ));
        $this->option('type', 'MYISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Blog', array(
             'local' => 'blog_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('Post', array(
             'local' => 'post_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}