<?php

/**
 * BaseCookie
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $name
 * @property string $value
 * @property timestamp $expires
 * @property sfGuardUser $User
 * 
 * @method integer     getId()      Returns the current record's "id" value
 * @method integer     getUserId()  Returns the current record's "user_id" value
 * @method string      getName()    Returns the current record's "name" value
 * @method string      getValue()   Returns the current record's "value" value
 * @method timestamp   getExpires() Returns the current record's "expires" value
 * @method sfGuardUser getUser()    Returns the current record's "User" value
 * @method Cookie      setId()      Sets the current record's "id" value
 * @method Cookie      setUserId()  Sets the current record's "user_id" value
 * @method Cookie      setName()    Sets the current record's "name" value
 * @method Cookie      setValue()   Sets the current record's "value" value
 * @method Cookie      setExpires() Sets the current record's "expires" value
 * @method Cookie      setUser()    Sets the current record's "User" value
 * 
 * @package    Empaty
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCookie extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cookie');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('value', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('expires', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));


        $this->index('user_id', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             'type' => NULL,
             ));
        $this->index('name', array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'type' => NULL,
             ));
        $this->index('expires', array(
             'fields' => 
             array(
              0 => 'expires',
             ),
             'type' => NULL,
             ));
        $this->index('created_at', array(
             'fields' => 
             array(
              0 => 'created_at',
             ),
             'type' => NULL,
             ));
        $this->index('updated_at', array(
             'fields' => 
             array(
              0 => 'updated_at',
             ),
             'type' => NULL,
             ));
        $this->option('type', 'MYISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}